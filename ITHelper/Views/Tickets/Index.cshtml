@model IEnumerable<ITHelper.Models.Ticket>

@{
    ViewData["Title"] = "Ticket Index";
}

<h1>Ticket Index</h1>
<p><a asp-action="Create">Create a New Ticket</a></p>
<hr />
<div style="display: inline;">
    <div>
        <select id="categoryType" name="categoryType" multiple>
            @foreach (var item in ViewBag.CategoryList)
            {
                <option value="@item.Value" selected="@item.Selected">@item.Text</option>
}
        </select>
        <select id="ticketType" name="ticketType" multiple>
            @foreach (var item in ViewBag.TicketStatusList)
            {
                <option value="@item.Value" selected="@item.Selected">@item.Text</option>
}
        </select>
        <select id="severityList" name="severityList" multiple>
            @foreach (var item in ViewBag.SeverityList)
            {
                <option value="@item.Value" selected="@item.Selected">@item.Text</option>
}
        </select>
        <input type="button" value="Search for Tickets" class="btn btn-primary" onclick="setFilter();" />
    </div>
</div>
<br />
@if (Model.Count() == 0)
{
    <hr />
    <br />
    <h1>There are no active tickets in the system.</h1>
}
else
{
    <table id="ticketTable" class="table">
        <thead>
            <tr>
                <th>
                    @*@Html.DisplayNameFor(model => model.Username)*@
                    <a onclick="sortTable('ticketTable', 0, false);">Username</a>
                </th>
                <th>
                    @*@Html.DisplayNameFor(model => model.Category)*@
                    <a onclick="sortTable('ticketTable', 1, false);">Category</a>
                </th>
                <th>
                    @*@Html.DisplayNameFor(model => model.Description)*@
                    <a onclick="sortTable('ticketTable', 2, false);">Description</a>
                </th>
                <th>
                    @*@Html.DisplayNameFor(model => model.AssignedTo)*@
                    <a onclick="sortTable('ticketTable', 3, false);">Assigned To</a>
                </th>
                <th>
                    @*@Html.DisplayNameFor(model => model.Severity)*@
                    <a onclick="sortTable('ticketTable', 4, false);">Severity</a>
                </th>
                <th>
                    @*@Html.DisplayNameFor(model => model.Status)*@
                    <a onclick="sortTable('ticketTable', 5, false);">Status</a>
                </th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr style="background-color: @item.GetColor();">
                    <td>
                        @Html.DisplayFor(modelItem => item.Username)
                    </td>
                    <td>
                        @if (item.Category != null)
                        {<div>@Html.DisplayFor(modelItem => item.Category.DisplayName)</div>}
                    </td>
                    <td style="width: 35%; word-wrap: break-word;">
                        @if (item.Description.Length > 100)
                        {
                            var description = $"{item.Description.Substring(0, 97)}...";
                            @Html.DisplayFor(modelItem => description);
                        }
                        else
                        { @Html.DisplayFor(modelItem => item.Description)}
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.AssignedTo)
                    <td>
                        @Html.DisplayFor(modelItem => item.Severity)
                    </td>
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Status)
                    </td>
                    <td>
                        <a asp-action="AddUpdate" asp-controller="Tickets" asp-route-id="@item.Id">Update Status</a> |
                        <a asp-action="Details" asp-controller="Tickets" asp-route-id="@item.Id">Details</a> |
                        <a asp-action="Edit" asp-controller="Tickets" asp-route-id="@item.Id">Edit</a> |
                        <a asp-action="Delete" asp-controller="Tickets" asp-route-id="@item.Id">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <partial name="~/Views/Shared/Paging.cshtml" />
}

<script type="text/javascript" async>
    function setFilter() {
        var categoryTypeSelector = document.querySelectorAll('#categoryType option:checked');
        var categoryType = Array.from(categoryTypeSelector).map(el => el.value);

        var ticketTypeSelector = document.querySelectorAll('#ticketType option:checked');
        var ticketType = Array.from(ticketTypeSelector).map(el => el.value);

        var severitySelector = document.querySelectorAll('#severityList option:checked');
        var severity = Array.from(severitySelector).map(el => el.value);

        var pageNo = 0;

        var url = "/ITHelper/Tickets/Index/{0}/{1}/{2}/{3}";
        url = url.replace("{0}", categoryType);
        url = url.replace("{1}", ticketType);
        url = url.replace("{2}", severity);
        url = url.replace("{3}", pageNo);

        window.location.replace(url);
    }
</script>
<script src="~/js/SortTable.js" async></script>